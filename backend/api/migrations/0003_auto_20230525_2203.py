# Generated by Django 3.2.2 on 2023-05-25 22:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0002_alter_meduser_med_organiizaciya'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Назначение',
                'verbose_name_plural': 'Назначения',
                'db_table': 'assignment',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=255, verbose_name='ФИО во внешней системе')),
                ('specialization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Специализация')),
            ],
            options={
                'verbose_name': 'Доктор/врач',
                'verbose_name_plural': 'Доктора/врачи',
                'db_table': 'doctor',
            },
        ),
        migrations.CreateModel(
            name='MedDataSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название набора')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата импорта')),
                ('is_excel', models.BooleanField(default=False, verbose_name='Импорт был через Эксель')),
                ('is_archive', models.BooleanField(default=False, help_text='не будет учитываться в наборе', verbose_name='Набор отправлен в архив')),
                ('source', models.IntegerField(choices=[(1, 'МИС Москвы')], verbose_name='Источник данных')),
                ('import_status', models.IntegerField(choices=[(1, 'Успешный импорт'), (2, 'Не все записи импортированы'), (3, 'Ошибка чтения файла'), (4, 'Ошибка структуры файла или запроса'), (5, 'Ошибка прав доступа')], verbose_name='Статус импорта')),
                ('excel_in', models.FileField(blank=True, help_text='если импорт был не через API', null=True, upload_to='', verbose_name='excel на входе')),
                ('excel_out', models.FileField(blank=True, help_text='если импорт был с ошибкой', null=True, upload_to='', verbose_name='excel с ошибками на выходе')),
                ('count_rows', models.IntegerField(blank=True, null=True, verbose_name='Количество строк данных')),
                ('count_error', models.IntegerField(blank=True, null=True, verbose_name='Количество ошибочных строк')),
                ('count_correct', models.IntegerField(blank=True, null=True, verbose_name='Количество правильных назначений')),
                ('count_dont_complete', models.IntegerField(blank=True, null=True, verbose_name='Количество неполных назначений')),
                ('count_excess', models.IntegerField(blank=True, null=True, verbose_name='Количество избыточных назначений')),
                ('count_dont_correct', models.IntegerField(blank=True, null=True, verbose_name='Количество неверных назначений')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь кто импортировал')),
            ],
            options={
                'verbose_name': 'Набор мед. назначений',
                'verbose_name_plural': 'Наборы мед. назначений',
                'db_table': 'med_data_set',
            },
        ),
        migrations.CreateModel(
            name='Mkb10',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'МКБ10',
                'verbose_name_plural': 'МКБ10',
                'db_table': 'mkb10',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=255, verbose_name='ФИО')),
                ('sex', models.IntegerField(blank=True, choices=[(1, 'Мужской'), (2, 'Женский')], null=True, verbose_name='Пол')),
                ('date_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
                'db_table': 'patient',
            },
        ),
        migrations.AddField(
            model_name='medorganization',
            name='source',
            field=models.IntegerField(choices=[(1, 'МИС Москвы')], default=1, verbose_name='Источник данных'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='medorganization',
            name='source_id',
            field=models.CharField(default=1, max_length=255, verbose_name='id во внешней системе'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='meduser',
            name='role',
            field=models.IntegerField(choices=[(1, 'Админ'), (2, 'Глав. врач'), (3, 'Доктор'), (4, 'Пациент'), (5, 'Соц. страх')], verbose_name='Роль'),
        ),
        migrations.CreateModel(
            name='PatientVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.IntegerField(choices=[(1, 'МИС Москвы')], verbose_name='Источник данных')),
                ('source_fio', models.CharField(max_length=255, verbose_name='ФИО во внешней системе')),
                ('source_id', models.CharField(max_length=255, verbose_name='id во внешней системе')),
                ('source_sex', models.IntegerField(blank=True, choices=[(1, 'Мужской'), (2, 'Женский')], null=True, verbose_name='Пол')),
                ('source_date_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.patient', verbose_name='Пациент(родительская запись в БД)')),
            ],
            options={
                'verbose_name': 'Пациент - вариации в разных системах',
                'verbose_name_plural': 'Пациенты- вариации в разных системах',
                'db_table': 'patient_variant',
            },
        ),
        migrations.CreateModel(
            name='MedDataSetDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_num', models.IntegerField(verbose_name='Номер строки')),
                ('import_status', models.IntegerField(choices=[(1, 'Успешный импорт'), (2, 'Предупреждение'), (3, 'Ошибка')], verbose_name='Статус импорта')),
                ('patient_sex', models.IntegerField(blank=True, choices=[(1, 'Мужской'), (2, 'Женский')], null=True, verbose_name='Пол пациента')),
                ('patient_date_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения пациента')),
                ('source_appointment_id', models.CharField(max_length=255, verbose_name='ID приёма во внешней системе')),
                ('patient_source_fio', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО пациента во внешней системе')),
                ('patient_source_id', models.CharField(max_length=255, verbose_name='ID пациента во внешней системе')),
                ('date_service', models.DateField(verbose_name='Дата услуги')),
                ('doctor_source_id', models.CharField(max_length=255, verbose_name='ID доктора во внешней системе')),
                ('doctor_source_fio', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО доктора во внешней системе')),
                ('doctor_source_specialization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Специализация доктора во внешней системе')),
                ('assignment_string', models.TextField(verbose_name='Строка с назначениями')),
                ('med_data_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.meddataset', verbose_name='Набор данных')),
                ('mkb10', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.mkb10', verbose_name='Диагноз МКБ 10')),
            ],
            options={
                'verbose_name': 'Набор мед. назначений - детализация',
                'verbose_name_plural': 'Наборы мед. назначений - детализация',
                'db_table': 'med_data_set_detail',
            },
        ),
        migrations.CreateModel(
            name='DoctorVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.IntegerField(choices=[(1, 'МИС Москвы')], verbose_name='Источник данных')),
                ('source_fio', models.CharField(max_length=255, verbose_name='ФИО во внешней системе')),
                ('source_id', models.CharField(max_length=255, verbose_name='id во внешней системе')),
                ('source_specialization', models.CharField(max_length=255, verbose_name='Специализация во внешней системе')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.doctor', verbose_name='Доктор/врач(родительская запись в БД)')),
            ],
            options={
                'verbose_name': 'Доктор/врач - вариации в разных системах',
                'verbose_name_plural': 'Доктора/врачи- вариации в разных системах',
                'db_table': 'doctor_variant',
            },
        ),
        migrations.CreateModel(
            name='AssignmentVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('assignment', models.ForeignKey(max_length=255, on_delete=django.db.models.deletion.CASCADE, to='api.assignment', verbose_name='Назначение(родительская запись в БД)')),
            ],
            options={
                'verbose_name': 'Назначение - вариация названия',
                'verbose_name_plural': 'Назначение - вариации названия',
                'db_table': 'assignment_variant',
            },
        ),
        migrations.CreateModel(
            name='AssignmentInDataSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_assignment', models.CharField(max_length=255, verbose_name='Назначение во внешней системе')),
                ('assignment_status', models.IntegerField(choices=[(1, 'Допустимое назначение'), (2, 'Недопустимое назначение')], verbose_name='Статус правильности назначения')),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.assignment', verbose_name='Сопоставленное назначение')),
                ('med_data_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.meddatasetdetail', verbose_name='Набор данных - детализация')),
            ],
            options={
                'verbose_name': 'Назанчение в наборах данных',
                'verbose_name_plural': 'Назанчения в наборах данных',
                'db_table': 'assignment_in_data_set',
            },
        ),
        migrations.CreateModel(
            name='AllAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_assignment', models.CharField(max_length=255, verbose_name='Назначение во внешней системе')),
                ('assignment_status', models.IntegerField(choices=[(1, 'Допустимое назначение'), (2, 'Недопустимое назначение')], verbose_name='Статус правильности назначения')),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.assignment', verbose_name='Сопоставленное назначение')),
                ('med_data_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.meddatasetdetail', verbose_name='Набор данных - детализация')),
            ],
            options={
                'verbose_name': 'Все назначения',
                'verbose_name_plural': 'Все назначения',
                'db_table': 'all_assignment',
            },
        ),
    ]
